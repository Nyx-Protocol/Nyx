# Cargo deny configuration for security and license compliance
# https://embarkstudios.github.io/cargo-deny/

[graph]
targets = []
all-features = true

[advisories]
version = 2
# Database to use for advisory checking
db-path = "~/.cargo/advisory-db"
db-urls = ["https://github.com/rustsec/advisory-db"]
# Yanked crate detection
yanked = "deny"
ignore = [
    # Add specific advisories to ignore here if needed
    # Unmaintained crates (warnings only)
    "RUSTSEC-2023-0089",  # atomic-polyfill
    "RUSTSEC-2024-0384",  # instant
    "RUSTSEC-2021-0127",  # serde_cbor
]
# Note: severity-threshold has been removed in cargo-deny 0.16+
# Configure severity handling via GitHub Actions/CI workflows instead

[licenses]
version = 2
# Allow licenses that are compatible with the project
# SPDX license expressions with OR operator (e.g., "MIT OR Apache-2.0") are automatically
# allowed if at least one component license is in the allow list
allow = [
    "0BSD",                          # BSD Zero Clause License
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "MIT",
    "Unicode-3.0",                   # Unicode License v3 (OSI approved) - used by ICU crates
    "Unicode-DFS-2016",              # Unicode Data Files and Software License
    "Unlicense",
    "Zlib",
]
confidence-threshold = 0.8
# Treat unlicensed crates as warnings, not errors, to allow development builds
unlicensed = "warn"
# Handle crates with multiple license files - allow if ANY license is in allow list
multiple-licenses = "allow"

[licenses.private]
# Allow proprietary licenses for workspace members
ignore = false
registries = []

[bans]
# Deny multiple versions of the same crate
multiple-versions = "warn"
# Wildcards in dependencies
wildcards = "allow"
# Allow/deny specific crates
deny = []
skip = []
skip-tree = []

[sources]
# Check crate sources
unknown-registry = "deny"
unknown-git = "deny"
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
allow-git = []

