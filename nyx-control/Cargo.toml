[package]
name = "nyx-control"
version = "0.1.0"
edition = "2021"

description = "Nyx control plane: DHT and settings sync"
license = "MIT OR Apache-2.0"

[dependencies]
# libp2p = { version = "0.49", default-features = false, optional = true, features = ["kad", "dns-tokio", "tcp-tokio", "mplex", "yamux", "websocket", "tokio"] }

# Pure Rust networking for DHT implementation
# quinn = { version = "0.10", default-features = false, features = ["ring", "runtime-tokio"] }
multiaddr = "0.18"
# hickory-resolver = "0.24"
# trust-dns-resolver = "0.23"
ed25519-dalek = { version = "2.0", features = ["rand_core"] }
chacha20poly1305 = { version = "0.10", features = ["alloc"] }
x25519-dalek = { version = "2.0", features = ["static_secrets"] }
nyx-core = { path = "../nyx-core" }
tokio = { version = "1", features = ["rt", "macros", "net", "time"] }
futures = "0.3"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
schemars = "0.8"
jsonschema = { version = "0.17", default-features = false }
hex = "0.4"
rand = "0.8"
nyx-stream = { path = "../nyx-stream" }
# reqwest = { version = "0.11", default-features = false, features = ["json"] } # DISABLED: uses ring/openssl
ureq = { version = "2.9", default-features = false, features = ["json"] } # Pure Rust HTTP client
tracing = "0.1"
anyhow = "1"
# jsonwebtoken = "9"
# jwt-simple = "0.12"
pasetors = "0.6"
chrono = { version = "0.4", features = ["std"] }
once_cell = "1.19"
thiserror = "1"
toml = "0.8"

[features]
# Full DHT functionality - pure Rust implementation
dht = []
default = ["dht"]

[dependencies.build-protoc]
path = "../build-protoc"

[build-dependencies]
protoc-bin-vendored = "3"
