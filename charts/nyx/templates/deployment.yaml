apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nyx.fullname" . }}
  labels:
{{ include "nyx.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ include "nyx.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "nyx.selectorLabels" . | indent 8 }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
{{- if or .Values.serviceAccount.create .Values.serviceAccount.name }}
      serviceAccountName: {{ default (include "nyx.fullname" .) .Values.serviceAccount.name }}
{{- end }}
      securityContext:
{{- if .Values.podSecurity.seccompProfile.type }}
        seccompProfile:
          type: {{ .Values.podSecurity.seccompProfile.type }}
{{- if eq .Values.podSecurity.seccompProfile.type "Localhost" }}
          localhostProfile: {{ .Values.podSecurity.seccompProfile.localhostProfile | quote }}
{{- end }}
{{- else }}
        # Default to RuntimeDefault if not explicitly set
        seccompProfile:
          type: RuntimeDefault
{{- end }}
      containers:
        - name: nyxd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}
          ports:
            - containerPort: 43300
            - containerPort: {{ .Values.service.metricsPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: {{ .Values.config.mountPath }}
              readOnly: true
          env:
            - name: NYX_CONFIG
              value: "{{ .Values.config.mountPath }}/{{ .Values.config.fileName }}"
          envFrom:
{{- if .Values.secrets.create }}
            - secretRef:
                name: {{ default (printf "%s-secret" (include "nyx.fullname" .)) .Values.secrets.name }}
{{- end }}
{{- range .Values.extraEnvFrom }}
            - {{ toYaml . | nindent 14 }}
{{- end }}
{{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: 43300
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds | default 15 }}
{{- end }}
{{- if .Values.serviceMonitor.enabled }}
{{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.httpPath | default "/metrics" }}
              port: {{ .Values.probes.readiness.httpPort | default .Values.service.metricsPort }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds | default 10 }}
{{- end }}
{{- else }}
{{- if .Values.probes.readiness.enabled }}
          readinessProbe:
{{- if or (eq .Values.probes.readiness.type "http") (and (not .Values.probes.readiness.type) false) }}
            httpGet:
              path: {{ .Values.probes.readiness.httpPath | default "/metrics" }}
              port: {{ .Values.probes.readiness.httpPort | default .Values.service.metricsPort }}
{{- else }}
            tcpSocket:
              port: 43300
{{- end }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds | default 10 }}
{{- end }}
{{- end }}
{{- if .Values.probes.startup.enabled }}
          startupProbe:
            tcpSocket:
              port: 43300
            failureThreshold: {{ .Values.probes.startup.failureThreshold | default 30 }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds | default 2 }}
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "nyx.fullname" . }}
            items:
              - key: {{ .Values.config.fileName }}
                path: {{ .Values.config.fileName }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.topologySpreadConstraints }}
  topologySpreadConstraints:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.imagePullSecrets }}
  imagePullSecrets:
{{ toYaml . | indent 8 }}
{{- end }}