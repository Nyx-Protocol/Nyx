apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nyx.fullname" . }}
  labels:
{{ include "nyx.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ include "nyx.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "nyx.selectorLabels" . | indent 8 }}
      annotations:
{{ toYaml (.Values.podAnnotations | default (dict)) | indent 8 }}
    spec:
{{- $sa := (default (dict) .Values.serviceAccount) -}}
{{- $ps := (default (dict) .Values.podSecurity) -}}
{{- $sp := (default (dict) $ps.seccompProfile) -}}
{{- $cfg := (default (dict) .Values.config) -}}
{{- $mount := ($cfg.mountPath | default "/etc/nyx") -}}
{{- $file := ($cfg.fileName | default "nyx.toml") -}}
{{- if or $sa.create $sa.name }}
      serviceAccountName: {{ default (include "nyx.fullname" .) $sa.name }}
{{- end }}
      securityContext:
{{- if $sp.type }}
        seccompProfile:
      type: {{ $sp.type }}
{{- if eq $sp.type "Localhost" }}
      localhostProfile: {{ $sp.localhostProfile | quote }}
{{- end }}
{{- else }}
        # Default to RuntimeDefault if not explicitly set
        seccompProfile:
          type: RuntimeDefault
{{- end }}
      containers:
        - name: nyxd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.daemon.command }}
          command: {{ .Values.daemon.command | toJson }}
          {{- end }}
          {{- if .Values.daemon.args }}
          args: {{ .Values.daemon.args | toJson }}
          {{- end }}
          securityContext:
{{ toYaml (.Values.securityContext | default (dict)) | indent 12 }}
          ports:
            - containerPort: 43300
            - containerPort: {{ .Values.service.metricsPort }}
          resources:
{{ toYaml (.Values.resources | default (dict)) | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: {{ $mount }}
              readOnly: true
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: daemon-script
              mountPath: /scripts
              readOnly: true
          env:
            - name: NYX_CONFIG
              value: "{{ $mount }}/{{ $file }}"
          envFrom:
{{- $sec := (default (dict) .Values.secrets) -}}
{{- if $sec.create }}
            - secretRef:
                name: {{ default (printf "%s-secret" (include "nyx.fullname" .)) $sec.name }}
{{- end }}
{{- range .Values.extraEnvFrom }}
            - {{ toYaml . | nindent 14 }}
{{- end }}
{{- $probes := (default (dict) .Values.probes) -}}
{{- if (and $probes.liveness $probes.liveness.enabled) }}
          livenessProbe:
            tcpSocket:
              port: 43300
            initialDelaySeconds: {{ $probes.liveness.initialDelaySeconds | default 10 }}
            periodSeconds: {{ $probes.liveness.periodSeconds | default 15 }}
{{- end }}
{{- $sm := (default (dict) .Values.serviceMonitor) -}}
{{- if $sm.enabled }}
{{- if (and $probes.readiness $probes.readiness.enabled) }}
          readinessProbe:
            httpGet:
              path: {{ $probes.readiness.httpPath | default "/metrics" }}
              port: {{ $probes.readiness.httpPort | default .Values.service.metricsPort }}
            initialDelaySeconds: {{ $probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ $probes.readiness.periodSeconds | default 10 }}
{{- end }}
{{- else }}
{{- if (and $probes.readiness $probes.readiness.enabled) }}
          readinessProbe:
{{- if or (eq $probes.readiness.type "http") (and (not $probes.readiness.type) false) }}
            httpGet:
              path: {{ $probes.readiness.httpPath | default "/metrics" }}
              port: {{ $probes.readiness.httpPort | default .Values.service.metricsPort }}
{{- else }}
            tcpSocket:
              port: 43300
{{- end }}
            initialDelaySeconds: {{ $probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ $probes.readiness.periodSeconds | default 10 }}
{{- end }}
{{- end }}
{{- if (and $probes.startup $probes.startup.enabled) }}
          startupProbe:
            tcpSocket:
              port: 43300
            failureThreshold: {{ $probes.startup.failureThreshold | default 30 }}
            periodSeconds: {{ $probes.startup.periodSeconds | default 2 }}
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "nyx.fullname" . }}
            items:
              - key: {{ $file }}
                path: {{ $file }}
        - name: tmp
          emptyDir: {}
        - name: daemon-script
          configMap:
            name: {{ include "nyx.fullname" . }}-daemon-script
            defaultMode: 0755
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.topologySpreadConstraints }}
  topologySpreadConstraints:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.imagePullSecrets }}
  imagePullSecrets:
{{ toYaml . | indent 8 }}
{{- end }}