[package]
name = "nyx-crypto"
version = "0.1.0"
edition = "2021"

description = "Nyx cryptography engine implementing Noise_Nyx handshake and HKDF wrappers."
license = "MIT OR Apache-2.0"

[features]
default = ["classic"]
# Optional/experimental feature flag used for cfg guards in code paths (no deps)
bike = []
hpke = ["dep:hpke"]
# Telemetry (no extra deps here; used only for conditional instrumentation counters)
telemetry = []
# Classic (Elliptic Curve) X25519 only build
classic = ["x25519-dalek"]

# Kyber post-quantum build (pure Rust implementation)
kyber = ["pqc_kyber"]

# ML-KEM post-quantum build (NIST standardized) - REMOVED due to C dependencies
# ml-kem = ["dep:ml-kem"]

# Convenience flag: build with hybrid classic/PQ algorithms
hybrid = ["classic", "kyber"]

# Convenience flag: build solely with PQ algorithms (Kyber by default)
pq_only = ["kyber"]

# Enable criterion benchmarks
bench = ["criterion"]
## Optional runtime helpers
runtime = ["tokio"]

[dependencies]
# Core crypto deps
# Classic X25519 (enabled by feature "classic")
# X25519 implementation (classic mode)
x25519-dalek = { version = "2.0.1", default-features = false, features = ["static_secrets"], optional = true }

# Pure Rust post-quantum implementations
pqc_kyber = { version = "0.7", optional = true }
# ml-kem = { version = "0.2", optional = true } # REMOVED due to C dependencies

# Symmetric primitives
blake3 = { version = "1.5", features = ["pure"] }
sha2 = "0.10"
chacha20poly1305 = { version = "0.9", default-features = false, features=["alloc"] }
hkdf = "0.12"
rand_core = { version = "0.9", features = ["std"] }
rand_core_06 = { package = "rand_core", version = "0.6", features=["std","getrandom"] }
rand = { version = "0.8", default-features = false, features=["std", "std_rng"] }

# HPKE RFC9180 implementation (optional)
hpke = { version = "0.11", optional = true }

# Dev / bench
criterion = { version = "0.5", optional = true }

# Modern zeroize version shared with rustls
zeroize = { version = "1.8", features=["zeroize_derive"] }
thiserror = "1.0"
# Using pure Rust ChaCha20Poly1305 instead of age to avoid ring dependency
aes-gcm = { version = "0.10", features = ["aes"] }
pbkdf2 = { version = "0.12", features = ["simple"] }
hmac = "0.12"
getrandom = "0.2"
tracing = "0.1"

# System dependencies

# metadata serialization for future extensions
serde = { version = "1", features=["derive"], optional = true }
serde_json = { version = "1", optional = true }

# Async runtime for key rotation scheduling
# Note: Avoid "rt-multi-thread" to allow wasm32 builds when this crate is used transitively.
tokio = { version = "1.0", features = ["time", "sync", "rt", "macros"], optional = true }

[dev-dependencies]
hex-literal = "0.4"
filetime = { version = "0.2", optional = false }
criterion = { version = "0.5", features = ["html_reports"] }
# dev用randは上で通常依存として定義済み
rand_chacha = { version = "0.3" }
proptest = "1"
